const tg = window.Telegram.WebApp;
tg.ready();
tg.expand();

let userBalance = 0;
let userInventory = [];
let currentCase = null;
let isSpinning = false;
let isFreeCaseCodeUsed = false;

// Mapping prize icons to actual image files
const prizeImages = {
    'üîÆ': 'images/crystal.png',
    'üå∏': 'images/sakura.png',
    'üíé': 'images/ring.png',
    'üèÜ': 'images/ringo.png',
    '‚≠ê': 'images/bear.png',
    'üéØ': 'images/happy.png',
    'üé™': 'images/love.png',
    'üé®': 'images/pani.png'
};

const cases = {
    free: {
        title: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–µ–π—Å',
        cost: 0,
        prizes: [
            { name: 'Crystal Ball', icon: 'üîÆ', price: 9.28 },
            { name: 'Flow Sakura', icon: 'üå∏', price: 5.46 },
            { name: 'Signet Ring', icon: 'üíé', price: 34.81 },
            { name: 'Diamond Ring', icon: 'üèÜ', price: 19.49 },
            { name: 'Toy Bear', icon: '‚≠ê', price: 25.86 },
            { name: 'Happy Birthday', icon: 'üéØ', price: 2.2 },
            { name: 'Love Potition', icon: 'üé™', price: 10.68 },
            { name: 'Jelly Bunny', icon: 'üé®', price: 4.34 }
        ],
        needsCode: true
    }
};

// <-- –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∏–∑–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è -->
function initiateWithdrawal() {
    if (userInventory.length === 0) {
        showErrorModal('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç', '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.', '–°–Ω–∞—á–∞–ª–∞ –≤—ã–∏–≥—Ä–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –æ—Ç–∫—Ä—ã–≤ –∫–µ–π—Å!');
        return;
    }
    const botUsername = 'CaseRoulette_bot';
    const commandPayload = 'with';
    const url = `https://t.me/${botUsername}?start=${commandPayload}`;
    tg.openTelegramLink(url);
    tg.close(); // <-- –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
}

function updateWithdrawButtonState() {
    const withdrawBtn = document.getElementById('withdrawBtn');
    if (userInventory.length > 0) {
        withdrawBtn.disabled = false;
        withdrawBtn.textContent = `–í—ã–≤–µ—Å—Ç–∏ –ø–æ–¥–∞—Ä–∫–∏ (${userInventory.length} —à—Ç.)`;
    } else {
        withdrawBtn.disabled = true;
        withdrawBtn.textContent = '–ù–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞';
    }
}

function showView(viewId) {
    document.querySelectorAll('.view').forEach(view => view.classList.remove('active'));
    document.getElementById(viewId).classList.add('active');
    document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
    if (viewId === 'homeView') {
        document.getElementById('navHome').classList.add('active');
    } else if (viewId === 'profileView') {
        document.getElementById('navProfile').classList.add('active');
    }
}

function renderInventory() {
    const inventoryGrid = document.getElementById('inventoryGrid');
    inventoryGrid.innerHTML = '';
    if (userInventory.length === 0) {
        inventoryGrid.innerHTML = '<div class="inventory-placeholder">–¢—É—Ç –ø–æ–∫–∞ –ø—É—Å—Ç–æ. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–µ–π—Å, —á—Ç–æ–±—ã –≤—ã–∏–≥—Ä–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫!</div>';
    } else {
        userInventory.forEach(item => {
            const itemDiv = document.createElement('div');
            itemDiv.className = 'inventory-item';
            const prizeImageSrc = prizeImages[item.icon] || '';
            itemDiv.innerHTML = `
                <img src="${prizeImageSrc}" alt="${item.name}" class="inventory-item-image">
                <div class="inventory-item-name">${item.name}</div>
            `;
            inventoryGrid.appendChild(itemDiv);
        });
    }
    updateWithdrawButtonState();
}

function loadUserProfile() {
    const user = tg.initDataUnsafe?.user;
    if (user) {
        const avatarEl = document.getElementById('userAvatar');
        if (user.photo_url) {
            avatarEl.src = user.photo_url;
        }
        const nameEl = document.getElementById('userName');
        const fullName = [user.first_name, user.last_name].filter(Boolean).join(' ');
        nameEl.textContent = fullName || user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        const idEl = document.getElementById('userId');
        idEl.textContent = `ID: ${user.id}`;
    }
}

function showErrorModal(title, notice, subtext) {
    document.getElementById('disabledTitle').textContent = title;
    document.getElementById('disabledNoticeText').innerHTML = notice;
    document.getElementById('disabledSubText').textContent = subtext;
    document.getElementById('disabledModal').style.display = 'flex';
}

function connectWallet() {
    showErrorModal(
        '–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        '‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
        '–≠—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ!'
    );
}

function showDisabledNotice(caseTitle) {
    showErrorModal(
        caseTitle,
        '‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –∫–µ–π—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç',
        '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –∫–µ–π—Å–æ–≤. –°–∫–æ—Ä–æ –æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏!'
    );
}

function closeDisabledModal() {
    document.getElementById('disabledModal').style.display = 'none';
}

function renderPrizeIcon(icon) {
    const imageUrl = prizeImages[icon];
    if (imageUrl) {
        return `<img src="${imageUrl}" alt="Prize">`;
    }
    return icon;
}

function generateRouletteItems(prizes) {
    const track = document.getElementById('rouletteTrack');
    track.innerHTML = '';
    track.style.transform = 'translateX(0)';
    const extendedPrizes = [];
    for (let i = 0; i < 10; i++) {
        extendedPrizes.push(...prizes);
    }
    extendedPrizes.forEach((prize) => {
        const item = document.createElement('div');
        item.className = 'roulette-item';
        item.innerHTML = `
            <span class="prize-icon">${renderPrizeIcon(prize.icon)}</span>
            <div class="prize-value">${prize.name}</div>
            <div class="prize-price-tag">${prize.price} TON</div>
        `;
        track.appendChild(item);
    });
}

function openCase(caseType, title) {
    if (isSpinning) return;
    currentCase = cases[caseType];
    document.getElementById('modalTitle').textContent = title;
    document.getElementById('caseModal').style.display = 'flex';
    const codeInput = document.getElementById('secretCode');
    codeInput.style.display = currentCase.needsCode ? 'block' : 'none';
    generateRouletteItems(currentCase.prizes);
}

function closeModal() {
    if (isSpinning) return;
    document.getElementById('caseModal').style.display = 'none';
    currentCase = null;
}

// <-- –û–ë–ù–û–í–õ–ï–ù–û: –ò–∑–º–µ–Ω–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –æ–∫–Ω–µ –≤—ã–∏–≥—Ä—ã—à–∞ -->
function showWinModal(wonPrize) {
    const prizeImageSrc = prizeImages[wonPrize.icon] || '';
    document.getElementById('winModalImage').src = prizeImageSrc;
    document.getElementById('winModalTitle').textContent = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${wonPrize.name}`;
    document.getElementById('winModalSubText').textContent = '–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–π –ø—Ä–∏–∑, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É "–ü—Ä–æ—Ñ–∏–ª—å" –∏ –Ω–∞–∂–º–∏—Ç–µ "–í—ã–≤–µ—Å—Ç–∏ –ø–æ–¥–∞—Ä–∫–∏".';
    document.getElementById('winModal').style.display = 'flex';
}

function closeWinModal() {
    document.getElementById('winModal').style.display = 'none';
    const spinButton = document.getElementById('spinButton');
    isSpinning = false;
    spinButton.disabled = false;
    spinButton.textContent = '–ö—Ä—É—Ç–∏—Ç—å';
    document.getElementById('secretCode').value = '';
    closeModal();
}

function spinRoulette() {
    if (isSpinning || !currentCase) return;

    if (currentCase.needsCode) {
        const secretCode = document.getElementById('secretCode').value;

        if (!secretCode) {
            showErrorModal('–û—à–∏–±–∫–∞', '‚ùå –í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥!', '–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.');
            return;
        }

        if (isFreeCaseCodeUsed) {
            showErrorModal('–ö–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω', '‚ùå –≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!', '–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.');
            return;
        }

        if (secretCode.toLowerCase() !== 'case') {
            showErrorModal('–û—à–∏–±–∫–∞ –∫–æ–¥–∞', '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥!', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            return;
        }

        isFreeCaseCodeUsed = true;
    }

    if (!currentCase.needsCode && userBalance < currentCase.cost) {
        showErrorModal('–û—à–∏–±–∫–∞', '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', `–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${userBalance} TON, –∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è ${currentCase.cost} TON.`);
        return;
    }

    isSpinning = true;
    const spinButton = document.getElementById('spinButton');
    spinButton.disabled = true;
    spinButton.textContent = '–ö—Ä—É—Ç–∏–º...';
    document.querySelectorAll('.roulette-item').forEach(item => {
        item.classList.remove('winner');
    });
    const wonPrizeIndex = Math.floor(Math.random() * currentCase.prizes.length);
    const wonPrize = currentCase.prizes[wonPrizeIndex];
    const track = document.getElementById('rouletteTrack');
    const items = track.children;
    const itemWidth = items[0].offsetWidth;
    const itemMargin = parseInt(window.getComputedStyle(items[0]).marginRight) * 2;
    const totalItemWidth = itemWidth + itemMargin;
    const middleOfReel = Math.floor(items.length / 2);
    const targetItemIndex = middleOfReel - (middleOfReel % currentCase.prizes.length) + wonPrizeIndex;
    const targetItem = items[targetItemIndex];
    const rouletteContainer = document.getElementById('rouletteContainer');
    const containerCenter = rouletteContainer.offsetWidth / 2;
    const targetItemCenter = targetItem.offsetLeft + (totalItemWidth / 2);
    const finalTranslateX = containerCenter - targetItemCenter;
    track.style.transform = `translateX(${finalTranslateX}px)`;
    setTimeout(() => {
        targetItem.classList.add('winner');
        userInventory.push(wonPrize);
        renderInventory();
        setTimeout(() => {
            showWinModal(wonPrize);
        }, 1000);
    }, 5000);
}

document.addEventListener('DOMContentLoaded', () => {
    loadUserProfile();
    showView('homeView');
    renderInventory();
});

window.onclick = function(event) {
    const caseModal = document.getElementById('caseModal');
    const disabledModal = document.getElementById('disabledModal');
    if (event.target === caseModal) {
        closeModal();
    }
    if (event.target === disabledModal) {
        closeDisabledModal();
    }
}
